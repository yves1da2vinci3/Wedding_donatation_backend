const mongoose = require('mongoose');
const { seedData, createDefaultAdmin, getDataStats } = require('./src/utils/seedData');

// Configuration de la base de donn√©es
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/wedding-donation';

async function testSeeders() {
  try {
    console.log('üîó Connexion √† la base de donn√©es...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connexion r√©ussie');

    console.log('\nüå± Test des seeders...');
    
    // Cr√©er l'admin par d√©faut
    console.log('\n1. Cr√©ation de l\'admin par d√©faut...');
    await createDefaultAdmin();
    
    // Cr√©er les donn√©es de test
    console.log('\n2. Cr√©ation des donn√©es de test...');
    await seedData();
    
    // Obtenir les statistiques
    console.log('\n3. Statistiques des donn√©es...');
    const stats = await getDataStats();
    
    if (stats) {
      console.log('üìä R√©sultats:');
      console.log(`   - Admins: ${stats.admins}`);
      console.log(`   - Enveloppes: ${stats.envelopes} (${stats.activeEnvelopes} actives)`);
      console.log(`   - Donations: ${stats.donations} (${stats.completedDonations} compl√©t√©es)`);
    }

    console.log('\n‚úÖ Test des seeders termin√© avec succ√®s!');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test des seeders:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå D√©connexion de la base de donn√©es');
    process.exit(0);
  }
}

// Ex√©cuter le test si le script est appel√© directement
if (require.main === module) {
  testSeeders();
}

module.exports = { testSeeders }; 